import java.util.HashSet;
import java.util.Iterator;

public class lesson_14_06 {
    //Предыстория появления итератора

    //А как вывести список всех элементов HashSet на экран? Ведь методов get() и set() у множества нет!
    //И HashSet в своей проблеме не одинок. Кроме HashSet, есть еще много различных коллекций,
    //у которых нельзя получить элемент по номеру, ведь четкий порядок элементов отсутствует.
    //Программисты в свое время изобрели много сложных структур данных, таких как граф, дерево. Или, например, список списков.
    //Многие контейнеры меняют порядок своих элементов при добавлении новых или удалении существующих элементов.
    //Например, есть список, который хранит элементы в отсортированном порядке,
    //и при добавлении нового элемента он практически всегда вставляется в середину списка.
    //Вот мы и получаем ситуацию, что контейнер, содержащий элементы, есть, сами элементы тоже есть, а фиксированного порядка нет.
    //Но допустим, мы хотим скопировать все элементы из такой коллекции в массив или список. Нам нужно получить все элементы.
    //Нам все равно в каком порядке мы их обойдем, главное — не повторяться. Как нам это сделать?

    //Итератор в коллекции
    //В качестве решения вышеописанной проблемы было предложено решение — итератор.
    //Итератор — это специальный объект у коллекции, который помогает обойти все элементы коллекции и не повторяться.
    //Получить итератор у любой коллекции можно с помощью кода:

    //Iterator<Тип> it = имя.iterator();

    //Где имя — это имя переменной-коллекции, Тип — это тип элементов коллекции. iterator() — это метод коллекции.
    //it — это имя переменной-объекта-итератора.

    //У объекта-итератора есть 3 метода:
    //Метод             	Описание
    //Тип next()            Возвращает очередной элемент коллекции
    //boolean hasNext()     Проверяет, есть ли еще не пройденные элементы
    //void remove()         Удаляет текущий элемент коллекции

    //Эти методы чем-то похожи на методы класса Scanner: nextInt() и hasNextInt().
    //Метод next() возвращает очередной элемент коллекции, у которой мы получили итератор.
    //Метод hasNext() проверяет, есть ли еще элементы в коллекции, которые итератор не вернул.
    //Вот как можно вывести на экран все элементы множества HashSet:

    public static void main(String[] args) {
        HashSet<String> set = new HashSet<>();      //Создаем объект типа HashSet, который хранит элементы типа String.

        set.add("Привет");                          //Заносим в set приветствия на разных языках.
        set.add("Hello");
        set.add("Hola");
        set.add("Bonjour");
        set.add("Cialo");
        set.add("Namaste");

        Iterator<String> it = set.iterator();       //Получаем объект-итератор у множества set.
        while (it.hasNext())                        //Пока есть еще элементы
        {
            String str = it.next();                 //Получаем следующий элемент
            System.out.println(str);                //Выводим элемент на экран
        }
    }
}
