public class lesson_14_24 {
    //Никто не использует LinkedList

    //Во-первых, класс ArrayList стал вставлять элементы в середину списка очень быстро.
    //При добавлении элемента в середину списка нужно сдвинуть все элементы после нужного на 1 в сторону конца списка.
    //Раньше это занимало время. Но сейчас все поменялось.
    //Все элементы массива находятся рядом в одном блоке памяти,
    //поэтому операция по сдвигу элементов массива выполняется очень быстрой низкоуровневой командой System.arraycopy().
    //К тому же, сейчас у процессоров большой кэш, и обычно весь массив попадает в такой кэш,
    //поэтому элементы массива сдвигаются даже не в памяти, а в кэше процессора. Миллион элементов легко сдвигается за одну миллисекунду.

    //Во-вторых, класс LinkedList быстро вставляет элементы, если вы вставляете их с помощью итератора.
    //Если вы с помощью итератора проходитесь по списку LinkedList
    //и постоянно вставляете новые элементы (или удаляете существующие), это действительно супербыстрая операция.
    //Если же вы просто в цикле добавляете элементы внутрь класса LinkedList,
    //к каждой быстрой операции вставки добавляется медленная операция «получение элемента».

    //Реальность гораздо ближе к такой ситуации:
    //Операция	                        Метод	                ArrayList	        LinkedList
    //Добавление элемента               add(value)              Быстро	            Очень быстро
    //Вставка элемента                  add(index, value)       Медленно	        Очень медленно
    //Получение элемента                get(index)              Очень быстро	    Очень медленно
    //Изменение элемента                set(index, value)       Очень быстро	    Очень медленно
    //Удаление элемента                 remove(index)           Медленно	        Очень медленно
    //Вставка через итератор            it.add(value)           Медленно	        Очень быстро
    //Удаление через итератор           it.remove()             Медленно	        Очень быстро


}
